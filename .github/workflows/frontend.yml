name: Docker Image CI

on:
  push:
    branches: ['feature/cicd']

  pull_request:
    branches: ['feature/cicd']

  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      HOST: ${{ secrets.SSH_HOST }}
      ROOT_PATH: /home/ubuntu/app

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: winnkyaw/apex:latest

      - name: Copy Docker Compose via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: 'docker-compose.yml'
          target: '${{ env.ROOT_PATH }}'

      - name: Copy nginx.conf via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: 'nginx.conf'
          target: '${{ env.ROOT_PATH }}/'

      - name: Check Root Directory
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ls -la ${{ env.ROOT_PATH }}

      - name: Docker Compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |

            cd ${{ env.ROOT_PATH }}
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker compose down --rmi all
            docker system prune -f
            docker compose pull 
            docker compose up -d

      - name: Prisma Generate
        if: steps.check_container.outputs.result == 'Container exists'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ env.ROOT_PATH }}
            docker exec -i apex-frontend npx prisma generate
            docker exec -i apex-frontend npx prisma migrate deploy
            rm -rf ${{ env.ROOT_PATH }}
